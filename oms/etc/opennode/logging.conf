disable_existing_loggers: false
filters:
  excluded-messages:
    (): opennode.oms.log.MessageRegexFilter
    banlist: [
      .*keepalive@openssh.com,
      .*POST .*/webterm,
      .*GET /favicon.ico,
      .*POST /+stream,
      .*OPTIONS /,
      .*GET /plugins/onc/root/,
      got channel session request,
      channel open,
      remote close,
      sending close 0,
      disabling diffie-hellman-group-exchange because we cannot find moduli file]
  twisted-system:
    (): opennode.oms.log.TwistedSystemFilter
    banlist: [SSHServerTransport, SSHService, proc]
formatters:
  default: {format: '%(asctime)s %(thread)x %(name)s %(levelname)s %(message)s'}
  twisted: {format: '%(asctime)s %(thread)x %(name)s %(levelname)s %(system)s %(message)s'}
  userlog: {format: '%(asctime)s %(levelname)s %(username)s %(subject)s %(owner)s %(message)s'}
  profiler: {format: '%(asctime)s %(message)s'}
handlers:
  default: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/omsd.log,
    formatter: default}
  twisted: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/omsd.log,
    formatter: twisted}
  audit: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/oms-audit.log,
    formatter: default}
  stdout: {
    class: logging.StreamHandler,
    formatter: default}
  userlog: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/oms-userlog.log,
    formatter: userlog}
  profiler: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/oms-memory.log,
    formatter: profiler}
  dblog: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/oms-dblog.log,
    formatter: default}
  activation: {
    class: logging.handlers.WatchedFileHandler,
    filename: /var/log/opennode/oms-activation.log,
    formatter: default}
  # Uncomment to enable sending logs by email
  #smtperrbuffer: {
  #  class: logging.handlers.MemoryHandler,
  #  target: smtperr,
  #  capacity: 50,
  #  flushLevel: CRITICAL}
  #smtperr: {
  #  class: logging.handlers.SMTPHandler,
  #  mailhost: localhost,
  #  fromaddr: errors-noreply@example.org,
  #  toaddrs: [admin@example.org],
  #  subject: "OMS Error log",
  #  level: ERROR}
  #activation: {
  #  class: logging.handlers.SMTPHandler,
  #  mailhost: localhost,
  #  fromaddr: activation-noreply@example.org,
  #  toaddrs: [admin@example.org],
  #  subject: "OMS activation notifications"}

loggers:
  #ZEO.ClientStorage: {level: WARNING}
  #ZEO.zrpc: {level: WARNING}
  salt: {level: WARNING}
  twisted:
    filters: [twisted-system, excluded-messages]
    handlers: [twisted]
    level: INFO
    propagate: false
  txn: {level: WARNING}
  opennode.oms.security.checker:
    level: INFO
    handlers: [audit, default, stdout]
  opennode.oms.endpoint.webterm.root:
    level: INFO
  opennode.oms.userlog:
    level: INFO
    handlers: [userlog]
    propagate: false
  opennode.oms.tools.memory_profiler:
    level: INFO
    handlers: [profiler]
    propagate: false
  opennode.oms.zodb.db:
    level: WARNING
    handlers: [dblog]
    propagate: false
  opennode.knot.backend.subprocess:
    level: WARNING
  opennode.knot.backend.billing.userstats:
    level: WARNING
  admin_notifications:
    handlers: [activation]
root:
  handlers: [default]
  level: INFO
version: 1
